/*Autored by:Jann Jasper Rosero and John Joseph Poller
Company:Padihon Corp.
Project: The GOL (Gym Of Legends)
Feature: Home Page
Description: A page that prompts the user to input personal details */
import 'package:flutter/material.dart';


void main() {

  runApp(MyApp());

}


class MyApp extends StatelessWidget {

  @override

  Widget build(BuildContext context) {

    return MaterialApp(

      debugShowCheckedModeBanner: false,

      theme: ThemeData.dark(),

      home: OnboardingScreen(),

    );

  }

}


class OnboardingScreen extends StatefulWidget {

  @override

  _OnboardingScreenState createState() => _OnboardingScreenState();

}


class _OnboardingScreenState extends State<OnboardingScreen> {

  PageController _pageController = PageController();

  int _currentPage = 0;


  void nextPage() {

    if (_currentPage < 5) {

      _pageController.nextPage(duration: Duration(milliseconds: 300), curve: Curves.ease);

    }

  }


  void previousPage() {

    if (_currentPage > 0) {

      _pageController.previousPage(duration: Duration(milliseconds: 300), curve: Curves.ease);

    }

  }


  @override

  Widget build(BuildContext context) {

    return Scaffold(

      body: Stack(

        children: [

          PageView(

            controller: _pageController,

            onPageChanged: (index) {

              setState(() {

                _currentPage = index;

              });

            },

            children: [

              SetupScreen("Consistency is the key to progress. Don't give up!", nextPage),

              GenderSelection(nextPage),

              AgeSelection(nextPage),

              WeightSelection(nextPage),

              HeightSelection(nextPage),

              GoalSelection(nextPage),

            ],

          ),

          if (_currentPage > 0) // Show back button only if not on the first page

            Positioned(

              top: 40,

              left: 16,

              child: IconButton(

                icon: Icon(Icons.arrow_back, color: Colors.white),

                onPressed: previousPage,

              ),

            ),

        ],

      ),

    );

  }

}


// ✅ *Setup Screen (Fixed)*

class SetupScreen extends StatelessWidget {

  final String message;

  final VoidCallback onNext;

  SetupScreen(this.message, this.onNext);


  @override

  Widget build(BuildContext context) {

    return Center(

      child: Column(

        mainAxisAlignment: MainAxisAlignment.center,

        children: [

          Text(message, textAlign: TextAlign.center, style: TextStyle(fontSize: 20, color: Colors.redAccent)),

          SizedBox(height: 20),

          ElevatedButton(onPressed: onNext, child: Text("Next")),

        ],

      ),

    );

  }

}


// ✅ *Gender Selection*

class GenderSelection extends StatefulWidget {

  final VoidCallback onNext;

  GenderSelection(this.onNext);


  @override

  _GenderSelectionState createState() => _GenderSelectionState();

}


class _GenderSelectionState extends State<GenderSelection> {

  String selectedGender = "";


  @override

  Widget build(BuildContext context) {

    return Column(

      mainAxisAlignment: MainAxisAlignment.center,

      children: [

        Text("What's Your Gender?", style: TextStyle(fontSize: 24, color: Colors.redAccent)),

        SizedBox(height: 20),

        Row(

          mainAxisAlignment: MainAxisAlignment.center,

          children: [

            genderButton(Icons.male, "Male"),

            SizedBox(width: 20),

            genderButton(Icons.female, "Female"),

          ],

        ),

        SizedBox(height: 20),

        ElevatedButton(

          onPressed: selectedGender.isNotEmpty ? widget.onNext : null,

          child: Text("Continue"),

        ),

      ],

    );

  }


  Widget genderButton(IconData icon, String label) {

    return GestureDetector(

      onTap: () {

        setState(() {

          selectedGender = label;

        });

      },

      child: Column(

        children: [

          Icon(icon, size: 80, color: selectedGender == label ? Colors.red : Colors.white),

          Text(label, style: TextStyle(fontSize: 18, color: Colors.white)),

        ],

      ),

    );

  }

}


// ✅ *Age Input (Fixed)*

class AgeSelection extends StatefulWidget {

  final VoidCallback onNext;

  AgeSelection(this.onNext);


  @override

  _AgeSelectionState createState() => _AgeSelectionState();

}


class _AgeSelectionState extends State<AgeSelection> {

  TextEditingController ageController = TextEditingController();

  bool isFilled = false;


  @override

  void initState() {

    super.initState();

    ageController.addListener(() {

      setState(() {

        isFilled = ageController.text.isNotEmpty;

      });

    });

  }


  @override

  Widget build(BuildContext context) {

    return Center(

      child: Column(

        mainAxisAlignment: MainAxisAlignment.center,

        children: [

          Text("How Old Are You?", style: TextStyle(fontSize: 24, color: Colors.redAccent)),

          SizedBox(height: 20),

          inputField(ageController, "Enter Age"),

          SizedBox(height: 20),

          ElevatedButton(

            onPressed: isFilled ? widget.onNext : null,

            child: Text("Continue"),

          ),

        ],

      ),

    );

  }

}


// ✅ *Weight Input (Fixed)*

class WeightSelection extends StatefulWidget {

  final VoidCallback onNext;

  WeightSelection(this.onNext);


  @override

  _WeightSelectionState createState() => _WeightSelectionState();

}


class _WeightSelectionState extends State<WeightSelection> {

  TextEditingController weightController = TextEditingController();

  bool isFilled = false;


  @override

  void initState() {

    super.initState();

    weightController.addListener(() {

      setState(() {

        isFilled = weightController.text.isNotEmpty;

      });

    });

  }


  @override

  Widget build(BuildContext context) {

    return Center(

      child: Column(

        mainAxisAlignment: MainAxisAlignment.center,

        children: [

          Text("What is Your Weight?", style: TextStyle(fontSize: 24, color: Colors.redAccent)),

          SizedBox(height: 20),

          inputField(weightController, "Enter Weight (kg)"),

          SizedBox(height: 20),

          ElevatedButton(

            onPressed: isFilled ? widget.onNext : null,

            child: Text("Continue"),

          ),

        ],

      ),

    );

  }

}


// ✅ *Height Input (Fixed)*

class HeightSelection extends StatefulWidget {

  final VoidCallback onNext;

  HeightSelection(this.onNext);


  @override

  _HeightSelectionState createState() => _HeightSelectionState();

}


class _HeightSelectionState extends State<HeightSelection> {

  TextEditingController heightController = TextEditingController();

  bool isFilled = false;


  @override

  void initState() {

    super.initState();

    heightController.addListener(() {

      setState(() {

        isFilled = heightController.text.isNotEmpty;

      });

    });

  }


  @override

  Widget build(BuildContext context) {

    return Center(

      child: Column(

        mainAxisAlignment: MainAxisAlignment.center,

        children: [

          Text("What is Your Height?", style: TextStyle(fontSize: 24, color: Colors.redAccent)),

          SizedBox(height: 20),

          inputField(heightController, "Enter Height (cm)"),

          SizedBox(height: 20),

          ElevatedButton(

            onPressed: isFilled ? widget.onNext : null,

            child: Text("Continue"),

          ),

        ],

      ),

    );

  }

}


// ✅ *Goal Selection (Clickable)*

class GoalSelection extends StatefulWidget {

  final VoidCallback onNext;

  GoalSelection(this.onNext);


  @override

  _GoalSelectionState createState() => _GoalSelectionState();

}


class _GoalSelectionState extends State<GoalSelection> {

  String selectedGoal = "";


  @override

  Widget build(BuildContext context) {

    return Column(

      mainAxisAlignment: MainAxisAlignment.center,

      children: [

        Text("What is Your Goal?", style: TextStyle(fontSize: 24, color: Colors.redAccent)),

        SizedBox(height: 20),

        goalButton("Lose Weight"),

        goalButton("Gain Weight"),

        goalButton("Muscle Mass Gain"),

        goalButton("Shape Body"),

        SizedBox(height: 20),

        ElevatedButton(

          onPressed: selectedGoal.isNotEmpty ? widget.onNext : null,

          child: Text("Continue"),

        ),

      ],

    );

  }


  Widget goalButton(String label) {

    return GestureDetector(

      onTap: () {

        setState(() {

          selectedGoal = label;

        });

      },

      child: Container(

        padding: EdgeInsets.all(10),

        margin: EdgeInsets.symmetric(vertical: 5),

        decoration: BoxDecoration(

          border: Border.all(color: selectedGoal == label ? Colors.red : Colors.white),

          borderRadius: BorderRadius.circular(10),

        ),

        child: Text(label, style: TextStyle(fontSize: 18, color: Colors.white)),

      ),

    );

  }

}


Widget inputField(TextEditingController controller, String hint) {

  return TextField(controller: controller, keyboardType: TextInputType.number, decoration: InputDecoration(hintText: hint, filled: true, fillColor: Colors.white24, border: OutlineInputBorder()), style: TextStyle(color: Colors.white));

}
